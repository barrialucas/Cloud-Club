<%- include( 'layouts/head' ) %>

<body style="background-color:#f9f9f9 ;">
  <%- include( 'layouts/navbar' ) %>
  <main class="mt-5">
    <div class="mt-3 d-flex">
      <div class="col-xxl-1"></div>
      <div class="col-xxl-10">
        <div class="row row-cols-5 d-flex justify-content-center" >
            <% prods.forEach((p) =>{ %>
            <div class="col m-2 p-2  shoes-index" style="background-color:#FFFFFF;">
              <a class="shoes-a "href="/shoes/<%= p._id %>">
                <img class="img-fluid" src="<%= p.img %>" alt="<%= p.title %>">
                <h5 class="mt-5 shoes-titulo" ><%= p.title %></h5>
                <h2 class="mb-5 shoes-desc"><%= p.desc %></h2>
              </a>
            </div>
            <% }) %>
      </div>
      <div class="col-xxl-1"></div>

    </div>

  <!--   <a href="logout">Logout</a> -->


    <!-- <h1>Chat</h1>
    <form id="formChat">
      Nombre:<input name="name" id="name"><br>
      Edad:<input name="edad" id="age"><br>
      Avatar:<input name="avatar" id="avatar"><br>
      username:<input name="username" id="mail"><br>
      Mensaje: <input name="text" id="text">
      <br><button type="submit">Enviar</button>
    </form>

    <div class="messages" id="mensajes"></div> -->

  </main>
  <%- include( 'layouts/footer' ) %>
</body>
<script>
  const socket = io.connect();
  const denormalize = normalizr.denormalize;
  const schema = normalizr.schema;


  const schemaAuthor = new schema.Entity(
    "author", {}, {
      idAttribute: "mail",
    }
  );
  const schemaMessage = new schema.Entity(
    "message", {
      schemaAuthor,
    }, {
      idAttribute: "id",
    }
  );
  const schemaAllMsg = new schema.Entity(
    "allMessages", {
      messages: [schemaMessage],
    }, {
      idAttribute: "id",
    }
  );



  socket.on("messages", (data) => {
    const denormalizedData = denormalize(
      data.result,
      schemaAllMsg,
      data.entities
    )
    console.log(denormalizedData);
  });



  const addMsg = () => {
    let fecha = new Date().toLocaleDateString()
    let hora = new Date().toLocaleTimeString()
    const message = {
      author: {
        name: document.getElementById("name").value,
        age: document.getElementById("age").value,
        avatar: document.getElementById("avatar").value,
        mail: document.getElementById("mail").value,
      },
      msg: {
        text: document.getElementById("text").value,
        date: fecha + " " + hora,
      }

    };
    socket.emit("new-message", message);
  };

  const element = document.getElementById("formChat");
  element.addEventListener("submit", (event) => {
    event.preventDefault();
    addMsg();
  });
</script>

</html>